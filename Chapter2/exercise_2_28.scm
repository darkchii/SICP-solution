(define (fringe tree)
  (define (iter elems)
    (if (null? elems)
	()
	(let ((item (recursion (car elems))))
	  (cat item (iter (cdr elems))))))
  (define (recursion node)
    (if (pair? (car node))
	(iter node)
	node))
  (define (cat lst1 lst2)
    (if (null? lst1)
	lst2
	(cons (car lst1) (cat (cdr lst1) lst2))))
  (iter tree))
