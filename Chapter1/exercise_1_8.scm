(define (abs x)
  (cond ((< x 0) (- x))
	((= x 0) 0)
	((> x 0) x)))
(define (square x)
  (* x x))
(define (cube x)
  (* x x x))
(define (average x y)
  (/ (+ x y) 3))

(define (cube-sqrt x)
  (define (good-enough? guess)
    (< (abs (- (cube guess) x)) 0.001))
  (define (improve guess)
    (average (* 2 guess) (/ x (square guess))))
  (define (newton-iter guess)
    (if (good-enough? guess)
	guess
	(newton-iter (improve guess))))  
  (newton-iter 1.0))
